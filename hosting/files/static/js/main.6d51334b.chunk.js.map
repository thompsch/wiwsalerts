{"version":3,"sources":["components/AlertItem.js","components/AlertList.js","stitch/app.js","stitch/functions.js","stitch/mongodb.js","stitch/authentication.js","components/ConfirmNumberModal.js","components/User.js","components/SavedModal.js","components/AlertApp.js","components/StitchAuth.js","components/DeleteUserModal.js","components/AllUsersTable.js","components/SendTextModal.js","components/AdminApp.js","components/Login.js","components/App.js","index.js"],"names":["AlertItem","props","item","index","toggleStatus","_useState","useState","subscribed","_useState2","Object","slicedToArray","setCheck","react_default","a","createElement","ListGroup","Item","onClick","changeState","index_esm","color","type","AlertList","user","commonjs_default","alerts","map","key","setAlertStatus","updateUser","styled","ul","_templateObject","APP_ID","app","Stitch","hasAppClient","getAppClient","initializeAppClient","checkCode","_x","_x2","_checkCode","apply","this","arguments","_callee","phoneNumber","code","regenerator_default","wrap","_context","prev","next","callFunction","then","response","console","log","JSON","stringify","status","error","message","abrupt","sent","stop","_callee2","phone","_context2","_callee3","_context3","msg","updateUserAndSendText","_x7","_updateUserAndSendText","_callee5","_context5","_callee6","_context6","mongoClient","getServiceClient","RemoteMongoClient","factory","usersCollection","db","collection","appSettingsCollection","csu","getCurrentStitchUser","findOne","oauth_id","id","_ref","asyncToGenerator","mark","result","_ref2","appSettings","insertOne","name","profile","data","email","alert_types","children","grade","newUser","_x4","_x3","catch","gollygee","saveCurrentUser","_saveCurrentUser","_callee4","_context4","_ref3","_id","settings","isAdmin","admins","includes","toString","_x5","isPhoneUnique","_isPhoneUnique","_callee7","_context7","phone_numbers","_callee8","_context8","loginFacebook","_loginFacebook","auth","loginWithRedirect","FacebookRedirectCredential","loginAnonymous","credential","AnonymousCredential","loginWithCredential","loginGoogle","_loginGoogle","GoogleRedirectCredential","isLoggedIn","logoutCurrentUser","logoutUserWithId","ConfirmNumberModal","close","show","setShow","sekrit","sekritInput","React","createRef","_useState3","_useState4","success","setSuccess","_useState5","_useState6","setSent","handleClose","Modal","onHide","dialogClassName","Header","closeButton","Title","Body","Card","className","bg","Button","disabled","variant","validator","isMobilePhone","FormControl","ref","placeholder","onChange","e","target","value","_sendCode","sendCode","Footer","current","focus","confirmPhoneChanges","User","setName","setEmail","setPhone","length","_useState7","confirmed","_useState8","setConfirmed","_useState9","_useState10","originalPhoneNumber","setOPN","undefined","_useState11","_useState12","showConfirm","setShowConfirm","isValidNumber","InputGroup","Prepend","onChangedInput","onBlur","formattedPhone","parsePhoneNumberFromString","format","CheckNumber","Append","go_index_esm","size","data-for","data-tip","style","dist_default","ReactToolTip","rebuild","SavedModal","func","handleShow","_test","test","arf","saveUser","AlertApp","setUser","isLoading","setIsLoading","Alert","u","assign","_saveUser","_getCurrentUser","getCurrentUser","fetchedUser","StitchAuthContext","createContext","useStitchAuth","context","useContext","Error","StitchAuthProvider","_React$useState","currentStitchUser","_React$useState2","authState","setAuthState","useEffect","listener","authListener","onUserLoggedIn","loggedInUser","objectSpread","currentUser","onUserLoggedOut","loggedOutUser","addAuthListener","hasRedirectResult","handleRedirectResult","handleOAuthRedirects","state","removeAuthListener","handleLogin","provider","t0","handleLogout","authInfo","useMemo","actions","Provider","DeleteUserModal","field","setField","newValue","setNewValue","oldValue","setOldValue","_x8","_softDeleteUser","softDeleteUser","set","$set","updateOne","upsert","r","finally","AllUsersTable","sortCaret","order","userToDelete","setUserToDelete","userToUpdate","setUserToUpdate","allUsers","setAllUsers","columns","dataField","text","sort","align","headerStyle","fontSize","formatter","t","events","column","columnIndex","row","rowIndex","find","toArray","users","lib_default","bootstrap4","keyField","cellEdit","cellEditFactory","mode","afterSaveCell","striped","hover","condensed","defaultSorted","SendTextModal","sendText","AdminApp","confirmText","setConfirmText","showSendText","setShowSendText","showChangeSettings","setShowChangeSettings","showAllUsers","setShowAllUsers","textBody","setTextBody","_useState13","_useState14","setAppSettings","_useState15","_useState16","selectedAlerts","setSelectedAlerts","_getAppSettings","getAppSettings","push","alert","checked","Layout","hideAll","as","_sendTextToAll","sendTextToAll","div","AdminApp_templateObject","Login","phoneInput","setIsUnique","isValid","setIsValid","Container","_checkNumberAndLogin","checkNumberAndLogin","ButtonGroup","unique","AppUI","admin","setAdmin","isUnique","_isAdmin","_useStitchAuth","Navbar","Nav","Brand","href","alt","src","Text","NavItem","LogMeOut","phoneChanged","number","_addPhone","addPhone","p","c","rootElement","document","getElementById","ReactDOM","render"],"mappings":"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","file":"static/js/main.6d51334b.chunk.js","sourcesContent":["import React, {useState} from \"react\";\nimport PropTypes from \"prop-types\";\nimport { FaRegCheckSquare, FaRegSquare } from \"react-icons/fa\";\nimport { ListGroup } from \"react-bootstrap\";\n\nAlertItem.propTypes = {\n  item: PropTypes.object,\n  toggleStatus: PropTypes.func,\n};\n\nexport default function AlertItem(props) {\n\n  const {item, index, toggleStatus} = props;\n\n  const [check, setCheck] = useState(item.subscribed)\n\n  function Checkbox() { return (item.subscribed ? <FaRegCheckSquare color='green'/> : <FaRegSquare color=\"gray\"/>)}\n  return (\n    <ListGroup.Item onClick={()=>changeState(index, item)}>\n     \n        <Checkbox />  {item.type}\n\n    </ListGroup.Item>\n  );\n\n  function changeState(index, item){\n    setCheck(!item.subscribed);\n    toggleStatus(index,item);\n  }\n}","import React, { useState } from \"react\";\nimport PropTypes from \"prop-types\";\nimport styled from \"@emotion/styled\";\nimport ErrorBoundary from \"react-error-boundary\";\nimport AlertItem from \"./AlertItem\";\nimport { ListGroup } from \"react-bootstrap\";\n\nAlertList.propTypes = {\n  user: PropTypes.object,\n  updateUser: PropTypes.func\n};\n\nexport default function AlertList(props) {\n  var user = props;\n  \n  return (\n    <ErrorBoundary>\n      <ListGroup>\n        {user.alerts.map((item, index) => (\n          <AlertItem\n            key={item.type}\n            index={index}\n            item={item}\n            toggleStatus={setAlertStatus}\n          />\n        ))}\n      </ListGroup>\n    </ErrorBoundary>\n  );\n\n  function setAlertStatus(index, item){\n      user.alerts[index].subscribed = !item.subscribed;\n      user = (user);\n      user.updateUser(user);\n  }\n}\n\nconst List = styled.ul`\n  padding: 0;\n  margin-top: 10px;\n  width: 450px;\n`;\n","import { Stitch } from \"mongodb-stitch-browser-sdk\";\n\n// TODO: Add your Stitch app's App ID\nconst APP_ID = \"wiwsalertservice-mpudr\";\n\n// TODO: Initialize the app client\nconst app = Stitch.hasAppClient(APP_ID)\n  ? Stitch.getAppClient(APP_ID)\n  : Stitch.initializeAppClient(APP_ID);\n\nexport { app };\n","import { app } from \"./app.js\";\n\nexport function confirmSms(phoneNumber) {\n  app.callFunction(\"sendConfirmationSms\", [phoneNumber]);\n}\n\nexport async function checkCode(phoneNumber, code) {\n  return await app.callFunction(\"confirmSecret\", [phoneNumber, code]).then(response=>{\n    console.log('function response', JSON.stringify(response))\n      if (response.status === \"success\") return true;\n      else {\n        console.error(response.message);\n        return false;\n    }\n  })\n}\n\nexport async function addPhone(phone) {\n  console.log('Adding phone', phone)\n  return await app.callFunction(\"addPhone\", [phone]).then(response=>{\n    return response;\n  });\n}\n\nexport async function sendTextToAll(message) {\n  return await app.callFunction(\"sendSMSToAll\", [{'msg': message}]).then(response=>{\n      if (response && response.status === \"success\") return true;\n      else {\n        return false;\n    }\n  });\n}\n\nexport async function sendText(message, groups) {\n  return await app.callFunction(\"SendSmsByCategories\", [{'msg': message, 'to': groups}]).then(response=>{\n      if (response && response.status === \"success\") return true;\n      else {\n        return false;\n    }\n  });\n}\n\nexport async function updateUserAndSendText(user) {\n  return await app.callFunction(\"updateUserAndSendText\", [user]).then(response=>{\n    return response;\n  });\n}\n\nexport async function softDeleteUser(user) {\n  return await app.callFunction(\"softDeleteUser\", [user]).then(response=>{\n    return response;\n  });\n}","import { RemoteMongoClient } from \"mongodb-stitch-browser-sdk\";\nimport { getCurrentStitchUser } from \"../stitch\";\nimport { updateUserAndSendText } from \"./functions\";\nimport { app } from \"./app\";\n\nconst mongoClient = app.getServiceClient(\n  RemoteMongoClient.factory,\n  \"atlas\"\n);\n\nconst usersCollection = mongoClient.db(\"alerts\").collection(\"users\");\nconst appSettingsCollection = mongoClient.db(\"alerts\").collection(\"appSettings\");\n\nexport { usersCollection };\n\nexport async function getCurrentUser() {\n  const csu = getCurrentStitchUser();\n  return await usersCollection.findOne({oauth_id:csu.id})\n  .then(async result=>{\n    if (result === null) { \n      //we have a new login\n      console.log('Creating a new user!')\n      return await appSettingsCollection.findOne().then(async appSettings=>{\n          return await usersCollection.insertOne({\n            oauth_id: csu.id, \n            name: csu.profile.data.name, \n            email: csu.profile.data.email,\n            phone: ('(xxx)yyy-zzzz'),\n            alerts: appSettings.alert_types,\n            children: [{name:'', grade:''}] })\n            .then(newUser=>{\n              return newUser;\n            })\n        })\n    } else { return result; }})\n  .catch(gollygee=>{console.error(gollygee)});\n}\n\nexport async function saveCurrentUser(user) {\n  return await updateUserAndSendText(user)\n  .then(result=>{\n    console.log('updated user results', result);\n    return true;\n  }).catch(gollygee=>{\n    console.error(gollygee);\n    return false;\n  });\n}\n\nexport async function isAdmin(){\n  const csu= await getCurrentStitchUser();\n    if (!csu) return false;\n    return await usersCollection.findOne({oauth_id:csu.id})\n    .then(async user=>{\n      if (!user || !user._id) return false;\n      return await appSettingsCollection.findOne().then(settings=>{\n          return {isAdmin:settings.admins.includes(user._id.toString()), user:user};\n      }).catch(gollygee=>{\n        console.error(gollygee);\n        return false;}\n      );\n    }).catch(gollygee=>{\n      console.error(gollygee);\n      return false;}\n    );\n}\n\nexport async function isPhoneUnique(phone){\n  return await appSettingsCollection.findOne().then(settings=>{\n    return !settings.phone_numbers.includes(phone);\n  })\n}\n\nexport async function getAppSettings(){\n  return await appSettingsCollection.findOne().then(settings=>{\n    return settings;\n})}","import { \n  AnonymousCredential,\n  FacebookRedirectCredential, \n  GoogleRedirectCredential,\n } from \"mongodb-stitch-browser-sdk\";\nimport { app } from \"./app.js\";\n\nexport function addAuthenticationListener(listener) {\n  app.auth.addAuthListener(listener);\n}\nexport function removeAuthenticationListener(listener) {\n  app.auth.removeAuthListener(listener);\n}\n\nexport async function loginFacebook() {\n  return await app.auth.loginWithRedirect(new FacebookRedirectCredential());\n}\n\nexport function loginAnonymous() {\n  const credential = new AnonymousCredential();\n  return app.auth.loginWithCredential(credential);\n}\n\nexport async function loginGoogle() { \n  console.log('logon with google')\n  return await app.auth.loginWithRedirect(new GoogleRedirectCredential());\n}\n\nexport function handleOAuthRedirects() {\n  if (app.auth.hasRedirectResult()) {\n    return app.auth.handleRedirectResult();\n  }\n};\n\nexport function hasLoggedInUser() {\n  // Check if there is currently a logged in user\n  return app.auth.isLoggedIn;\n}\n\nexport function getCurrentStitchUser() {\n  // Return the user object of the currently logged in user\n  return app.auth.isLoggedIn ? app.auth.user : null;\n}\n\nexport function logoutCurrentUser() {\n  // Logout the currently logged in user\n  const user = getCurrentStitchUser();\n  return app.auth.logoutUserWithId(user.id);\n}\n\n","import React, {useState} from \"react\";\nimport PropTypes from \"prop-types\";\nimport {Button, Modal, InputGroup, FormControl, Card } from \"react-bootstrap\";\nimport ErrorBoundary from \"react-error-boundary\";\nimport { confirmSms, checkCode } from \"../stitch\";\nimport validator from \"validator\";\n\nConfirmNumberModal.propTypes = {\n    show: PropTypes.bool\n  };\n\nexport default function ConfirmNumberModal(props) {\n  var close = props.close;\n  var [show, setShow] = useState(false);\n  var sekrit = '';\n\n  const sekritInput = React.createRef();\n\n  if(!show && props.show) {\n    setShow(true);\n  } \n  var [success, setSuccess] = useState(false);\n  const [sent, setSent] = useState(false);\n\n  if (success) close();\n\n  const handleClose = () => {\n    if (show) setShow(false);\n    close();\n  }\n  \n  return (\n    <ErrorBoundary>\n      <Modal show={show} onHide={handleClose} dialogClassName='secondary'>\n        <Modal.Header closeButton>\n          <Modal.Title>Confirm Phone Number</Modal.Title>\n        </Modal.Header>\n        <Modal.Body>\n            <Card className=\"text-center\"  bg='light'>\n              {!sent ? 'We need to confirm your phone number. Click the button below, and we\\'ll send you a text message with a code. '\n              :'The code has been sent to your phone. '\n            }\n            </Card>\n            <Card>\n            <Button disabled={sent} variant={sent?\"secondary\":\"primary\"} onClick={sendSms}>{!sent?\"Send me a text\":\"Code sent!\"}</Button>\n            </Card>\n            <hr/>\n            <Card className=\"text-center\" bg='light'>\n            <span>Please enter the code in the box below, and then click \"Confirm\".</span>\n            <FormControl  disabled={!sent} ref={sekritInput} id='sekrit' placeholder=\"123456\" onChange={(e)=>{sekrit = e.target.value}}></FormControl>\n          <Button  disabled={!sent} variant=\"primary\" onClick={()=>sendCode(handleClose)}>Confirm</Button>\n          </Card>\n        </Modal.Body>\n        <Modal.Footer>\n          \n          <Card>\n          <Button variant=\"light\" onClick={handleClose}>Cancel</Button>\n          </Card>\n        </Modal.Footer>\n      </Modal>\n      </ErrorBoundary>\n  )\n \n  function sendSms() {\n    if (!validator.isMobilePhone(props.phone, 'en-US')){\n      //TODO: focus on form and add message...\n      return;\n    }\n    setSent(true);\n    confirmSms(props.phone);\n  }\n\n  async function sendCode(handleClose){\n    if (sekrit === '') {\n      //TODO: focus on formcontrol and add message....\n      sekritInput.current.focus();\n      return;\n    }\n    await checkCode(props.phone, sekrit).then(success=>{\n      console.log(success);\n      setSuccess(success);\n      props.confirmPhoneChanges(success);\n      handleClose();\n    })\n  }\n}\n\n","import React, { useState } from \"react\";\nimport PropTypes from \"prop-types\";\nimport ErrorBoundary from \"react-error-boundary\";\nimport { Card, InputGroup, FormControl  } from \"react-bootstrap\";\nimport validator from \"validator\";\nimport ConfirmNumberModal from \"./ConfirmNumberModal\";\nimport { GoAlert, GoCheck, GoX } from \"react-icons/go\";\nimport ReactToolTip from \"react-tooltip\";\nimport { parsePhoneNumberFromString } from 'libphonenumber-js'\n \nUser.propTypes = {\n  user: PropTypes.object,\n  updateUser: PropTypes.func\n};\n\nexport default function User(props){\n  var {user, updateUser} = props\n  var [name, setName] = useState(user.name);\n  var [email, setEmail] = useState(user.email);\n  var [phone, setPhone] = useState();\n  if (!phone && user.phone.length >0) setPhone(user.phone);\n  var [confirmed, setConfirmed] = useState(user.confirmed);\n  \n  const [originalPhoneNumber, setOPN] = useState();\n  if (originalPhoneNumber===undefined) {\n    setOPN(user.phone);\n  }\n\n  var [showConfirm, setShowConfirm] = useState();\n  const isValidNumber = (phone && validator.isMobilePhone(phone, 'en-US'));\n\n  return (\n    <ErrorBoundary>\n        <Card>\n          <Card.Header>Your Contact Information</Card.Header>\n          <Card.Body>\n            <InputGroup>\n            <InputGroup.Prepend>Name</InputGroup.Prepend>\n            <FormControl name=\"username\" value={name && \" \"} onChange={(e)=>onChangedInput(e)}/>\n            </InputGroup>\n            <InputGroup>\n            <InputGroup.Prepend>Email</InputGroup.Prepend>\n            <FormControl name=\"useremail\" value={email && \" \"} onChange={(e)=>onChangedInput(e)}/>\n            </InputGroup>\n            <InputGroup>\n            <InputGroup.Prepend>Phone (for texts)</InputGroup.Prepend>\n            <FormControl name=\"userphone\" value={phone} onChange={(e)=>onChangedInput(e)} onBlur={(e)=>CheckNumber(e)}/>\n            <InputGroup.Append>\n                {!isValidNumber && <GoX color=\"red\" size='30' data-for='novalid' data-tip=\"This is not a valid phone number.\" />}\n                { (isValidNumber && confirmed) ? \n                <GoCheck color=\"green\" size='30' data-for='good' data-tip=\"This is a confirmed phone number.\" /> : \n                <GoAlert color=\"gold\" size='30' data-for='unconfirmed' data-tip=\"This number has not yet been confirmed.\" />}   \n              </InputGroup.Append>\n            </InputGroup>\n            {!isValidNumber && <label style={{color:'red'}}>Please enter a valid phone number</label>}\n            </Card.Body>\n            <ConfirmNumberModal close={()=>setShowConfirm(false)} show={showConfirm} phone={phone} id={user._id} confirmPhoneChanges={(e)=>confirmPhoneChanges(e)}></ConfirmNumberModal>\n        </Card> \n        <ReactToolTip id='novalid'/>\n        <ReactToolTip id='good'/>\n        <ReactToolTip id='unconfirmed'/>\n    </ErrorBoundary>\n  );\n  \nfunction CheckNumber(e){\n  //var phone = e.target.value;\n  var formattedPhone = parsePhoneNumberFromString(e.target.value, \"US\");\n  console.log(formattedPhone)\n  if (formattedPhone===undefined) return;\n  var phone = formattedPhone.format(\"E.164\");\n\n  if (!validator.isMobilePhone(phone, 'en-US')){\n    //TODO: focus on form and add message...\n\n    return;\n  }\n  else if (originalPhoneNumber !== e.target.value){\n     setShowConfirm(true);\n  }\n}\n\n  function onChangedInput(e){\n    switch(e.target.name) {\n          case 'username': {\n            user.name = e.target.value;\n            setName(user.name);\n            break;\n          }\n          case 'useremail': {\n            user.email = e.target.value\n            setEmail(user.email);\n            break;\n          }\n          case 'userphone': {\n            user.phone = e.target.value\n           \n             setPhone(user.phone);\n\n              if (user.phone === originalPhoneNumber) setConfirmed(true);\n              else if (confirmed===true) setConfirmed(false)\n              \n              ReactToolTip.rebuild();\n              break;\n              //}\n        }\n    }\n    updateUser(user);\n  }\n\n  function confirmPhoneChanges(success){\n    if (success) { setConfirmed(true);}\n    else {\n      setPhone(originalPhoneNumber);\n      setConfirmed(user.confirmed)\n  }\n  }\n}","import React, {useState} from \"react\";\nimport PropTypes from \"prop-types\";\nimport {Button, Modal } from \"react-bootstrap\";\nimport ErrorBoundary from \"react-error-boundary\";\n\nSavedModal.propTypes = {\n    saveUser: PropTypes.func\n  };\n\nexport default function SavedModal(func) {\n  var [show, setShow] = useState(false);\n  var [success, setSuccess] = useState(false);\n\n  const handleClose = () =>setShow(false);\n  const handleShow = () => setShow(true);\n\n  return (\n    <ErrorBoundary>\n      <Button variant=\"info\" onClick={()=>test()}>Save My Changes</Button>\n      <Modal show={show} onHide={handleClose}>\n        <Modal.Header closeButton>\n          <Modal.Title>{success ? \"Saved\" : \"Error\"}</Modal.Title>\n        </Modal.Header>\n        <Modal.Body>{success ? \"Your preferences have been saved.\" : \"Something went wrong. Please check your information and try again.\"}</Modal.Body>\n        <Modal.Footer>\n          <Button variant=\"secondary\" onClick={handleClose}>\n            OK\n          </Button>\n        </Modal.Footer>\n      </Modal>\n      </ErrorBoundary>\n  )\n\n  async function test(arf) {\n    var result = await func.saveUser();\n    setSuccess(result);\n    handleShow()\n  }\n  }\n\n","// React\nimport React, { useState } from \"react\";\nimport styled from \"@emotion/styled\";\nimport ErrorBoundary from \"react-error-boundary\";\nimport validator from \"validator\";\nimport ChildList from \"./ChildList\";\nimport AlertList from \"./AlertList\";\nimport User from \"./User\";\nimport SavedModal from \"./SavedModal\";\nimport { getCurrentUser, saveCurrentUser } from \"./../stitch/\"\nimport { Card, Alert } from \"react-bootstrap\";\n\n\nAlertApp.propTypes = {};\n\nexport default function AlertApp(props) {\n  const [user, setUser] = useState((user && user._id) ? user : {});\n  var [isLoading, setIsLoading] = useState(false);\n\n  if (!user || user._id === undefined) {\n\n    if (!isLoading) {\n      setIsLoading(true);\n      getCurrentUser().then(fetchedUser => {\n        setUser(fetchedUser);\n        setIsLoading(false);\n      });\n    }\n\n    return (\n      <ErrorBoundary>\n          <Card>\n            <Card.Title>\n              <h1>Loading...</h1>\n            </Card.Title>\n          </Card>\n      </ErrorBoundary>\n    )\n  }\n \n  return (\n    <ErrorBoundary>\n        <Card>\n          <Card.Header>\n            <h1>Your Settings and Preferences</h1>\n          </Card.Header>\n          <Card>\n          {!validator.isMobilePhone(user.phone, 'en-US') && <Alert variant='warning'>It looks like you're new here! Please provide a phone number and \n            specify what types of alerts you'd like to receive.\n          </Alert>}\n          </Card>\n          <User updateUser={(u)=>updateUser(u)} user={user}/>\n          <Card>\n           <Card.Header>Your Alert Preferences</Card.Header>\n          <AlertList updateUser={(u)=>updateUser(u)} {...user} />\n          </Card>\n          <SavedModal saveUser={saveUser}></SavedModal>\n        </Card>\n    </ErrorBoundary>\n  );\n  \n  function updateUser(u){\n    setUser(user);\n  }\n\n  async function saveUser() {\n    return await saveCurrentUser(user);\n  }\n}\n\n","import React, {useEffect} from \"react\";\nimport PropTypes from \"prop-types\";\nimport {\n  hasLoggedInUser,\n  loginAnonymous,\n  loginFacebook, \n  loginGoogle, \n  logoutCurrentUser,\n  getCurrentStitchUser,\n  addAuthenticationListener,\n  removeAuthenticationListener,\n  handleOAuthRedirects, \n} from \"./../stitch/authentication\";\n\n// Create a React Context that lets us expose and access auth state\n// without passing props through many levels of the component tree\nconst StitchAuthContext = React.createContext();\n\n// Create a React Hook that lets us get data from our auth context\nexport function useStitchAuth() {\n  const context = React.useContext(StitchAuthContext);\n  if (!context) {\n    throw new Error(`useStitchAuth must be used within a StitchAuthProvider`);\n  }\n  return context;\n} \n\n// Create a component that controls auth state and exposes it via\n// the React Context we created.\nexport function StitchAuthProvider(props) {\n  const [authState, setAuthState] = React.useState({\n    isLoggedIn: hasLoggedInUser(),\n    currentStitchUser: getCurrentStitchUser(),\n  });\n\n  useEffect(() => {\n    const authListener = {\n      onUserLoggedIn: (auth, loggedInUser) => {\n        if (loggedInUser) {\n          setAuthState(authState => ({\n            ...authState,\n            isLoggedIn: true,\n            currentUser: loggedInUser,\n          }));\n        }\n      },\n      onUserLoggedOut: (auth, loggedOutUser) => {\n        setAuthState(authState => ({\n          ...authState,\n          isLoggedIn: false,\n          currentUser: null,\n        }));\n      }\n    };\n    addAuthenticationListener(authListener);\n    handleOAuthRedirects(); \n    setAuthState(state => ({ ...state}));\n    return () => {\n      removeAuthenticationListener(authListener);\n    };\n  }, []);\n\n  const handleLogin = async (provider) => {\n    if (authState.isLoggedIn) {\n      logoutCurrentUser();\n    }\n      switch(provider) {\n        case \"anonymous\": return loginAnonymous()\n        case \"facebook\": return loginFacebook()\n        case \"google\": return loginGoogle()\n        default: return {}\n      }\n  }\n  \n  const handleLogout = async () => {\n    if (authState.isLoggedIn) {\n      await logoutCurrentUser();\n      setAuthState({\n        ...authState,\n        isLoggedIn: false,\n        currentUser: null,\n      });\n    }\n  }\n\n  // We useMemo to improve performance by eliminating some re-renders\n  const authInfo = React.useMemo(() => {\n    const { isLoggedIn, currentUser } = authState;\n    const value = {\n      isLoggedIn,\n      currentUser,\n      actions: {\n        handleLogin,\n        handleLogout,\n      },\n    };\n    return value;\n  }, [authState]); \n\n  return (\n    <StitchAuthContext.Provider value={authInfo}>\n      {props.children}\n    </StitchAuthContext.Provider>\n  );\n}\n\nStitchAuthProvider.propTypes = {\n  children: PropTypes.element,\n};\n","import React, {useState} from \"react\";\nimport PropTypes from \"prop-types\";\nimport {Button, Modal } from \"react-bootstrap\";\nimport ErrorBoundary from \"react-error-boundary\";\nimport { softDeleteUser } from \"./../stitch/\";\nimport { GoAlert, GoQuestion } from \"react-icons/go\";\nimport { usersCollection } from \"./../stitch\";\n\nDeleteUserModal.propTypes = {\n    show: PropTypes.bool,\n    type: PropTypes.string,\n    user: PropTypes.object,\n    field: PropTypes.string,\n    newValue: PropTypes.string,\n    oldValue: PropTypes.string,\n    close: PropTypes.func\n  };\n\nexport default function DeleteUserModal(props) {\n  var [user, setUser] = useState(null)\n  if (!user && props.user) setUser(props.user);\n  var [field, setField] = useState(null)\n  if (!field && props.field) setField(props.field);\n  var [newValue, setNewValue] = useState(null)\n  if (!newValue && props.newValue) setNewValue(props.newValue);\n  var [oldValue, setOldValue] = useState(null)\n  if (!oldValue && props.oldValue) setOldValue(props.oldValue);\n  \n  var [show, setShow] = useState(false);\n  var close = props.close;\n\n  if(!show && props.show) {\n    setShow(true);\n  } \n\n  const handleClose = () =>{\n    if (show) setShow(false);\n    close();\n  }\n\n  function body(){\n    const foo = \n      props.type == \"delete\" ? \n        <span><b>Are you sure you want to delete the following user from the system? </b><br/> \n          {user && (user.name +\" (\"+user.email +\")\")}</span>\n        : \n        <span><b>Are you sure you want to make the following changes?</b><br/> \n          <i>{field}</i>: &quot;{oldValue}&quot; <i>changed to</i>  &quot;{newValue}&quot;\n          </span>\n    return (foo);\n    }\n    \n  return (\n    <ErrorBoundary>\n      <Modal show={show} onHide={handleClose}>\n        <Modal.Header closeButton>\n          <Modal.Title>\n            {props.type == \"delete\" ?\n            <span><GoAlert size='50' color='red'/><span>Delete User?</span></span>\n            :\n            <span><GoQuestion size='50' color='gold'/><span>Update User?</span></span>}\n            </Modal.Title>\n            </Modal.Header>\n        <Modal.Body>\n            {body()}\n            <Modal.Footer>\n            <Button variant=\"secondary\" onClick={handleClose}>Cancel</Button>\n            {props.type == 'delete' ?\n              <Button variant=\"danger\" onClick={deleteUser}>Delete User</Button> : \n              <Button variant=\"primary\" onClick={()=>updateUser()}>Update User</Button>\n            }\n            </Modal.Footer>\n        </Modal.Body>\n      </Modal>\n      </ErrorBoundary>\n  )\n \n  function deleteUser(){\n    console.log('deleting user', user)\n    softDeleteUser(user).then(result=>{\n        handleClose();\n    })\n  }\n\n  function updateUser(){\n    const set = { $set: { }}\n    set.$set[field] = newValue;\n    usersCollection.updateOne({'_id':user._id}, set, {'upsert':false})\n    .then(r => {\n      console.log('user updated', r);\n      handleClose();\n    }).catch(e => {\n      console.error('stich error', e)\n      handleClose();\n    }).finally(()=>{\n      handleClose();\n    });\n  }\n}\n\n","import React, { useState } from \"react\";\nimport PropTypes from \"prop-types\";\nimport ErrorBoundary from \"react-error-boundary\";\nimport BootstrapTable from 'react-bootstrap-table-next';\nimport cellEditFactory from 'react-bootstrap-table2-editor';\nimport { usersCollection } from \"./../stitch\";\nimport { GoTrashcan } from \"react-icons/go\";\nimport DeleteUserModal from \"./DeleteUserModal\"\nimport { GoCheck, GoChevronUp, GoChevronDown, GoCircleSlash } from \"react-icons/go\";\n\nAllUsersTable.propTypes = {\n  user: PropTypes.object,\n  updateUser: PropTypes.func\n};\n\nexport default function AllUsersTable() {\n  const sortCaret = (order)=>{\n    if (!order) return (<span className='pull-right'><GoChevronUp color=\"#ababab\"/><GoChevronDown color=\"#ababab\"/></span>);\n    else if (order === 'asc') return (<span className='pull-right'><GoChevronUp color=\"#ababab\"/><GoChevronDown/></span>);\n    else if (order === 'desc') return (<span className='pull-right'><GoChevronUp/><GoChevronDown color=\"#ababab\"/></span>);\n    return null;\n  }\n    const [userToDelete, setUserToDelete] = useState(null);\n    const [userToUpdate, setUserToUpdate] = useState(null);\n    const [allUsers, setAllUsers] = useState([]);\n\n    const columns = [{\n        dataField: 'name',\n         text: 'Name',\n         sort:true,\n         sortCaret: sortCaret\n       }, {\n         dataField: 'email',\n         text: 'Email',\n         sort: true,\n         sortCaret: sortCaret\n       },{\n        dataField: 'phone',\n        text: 'Phone',\n        sort: true,\n        sortCaret: sortCaret\n      },{\n        dataField: 'confirmed',\n        text: 'Conf?',\n        sort: true,\n        sortCaret: sortCaret,\n        align: 'center',\n        headerStyle: { fontSize: '10px' },\n        formatter: (t)=>{return (t ? <GoCheck color=\"#ababab\"/> : <GoCircleSlash color=\"#ababab\"/>)}\n      },{\n        dataField: '',\n        text: 'Delete User',\n        align: 'center',\n        events:{onClick: (e, column, columnIndex, row, rowIndex) => {setUserToDelete(row)}},\n        formatter: () => {return (<GoTrashcan color='red'/>)}\n      }];\n\n      const defaultSorted = [{\n        dataField: 'name',\n        order: 'desc'\n      }];\n\n\n    if (allUsers.length === 0) {\n        usersCollection.find().toArray().then(users=>{\n        setAllUsers(users);\n        });\n    }\n\n  return (\n    <ErrorBoundary>\n      <BootstrapTable \n          bootstrap4 \n          keyField='_id' \n          data={ allUsers } \n          columns={ columns } \n          cellEdit={ cellEditFactory(\n            { mode: 'dbclick',\n              afterSaveCell: (oldValue, newValue, row, column) => setUserToUpdate({user:row, field:column.dataField, newValue: newValue, oldValue:oldValue})\n            })}\n          striped hover condensed\n          defaultSorted={ defaultSorted } \n          />\n        <DeleteUserModal close={()=>setUserToDelete(null)} type=\"delete\"  show={userToDelete != null} user={userToDelete} />\n        <DeleteUserModal close={()=>setUserToUpdate(null)} type=\"update\" show={userToUpdate != null}  user={userToUpdate} />\n    </ErrorBoundary>\n  ); \n}","import React, {useState} from \"react\";\nimport PropTypes from \"prop-types\";\nimport {Button, Modal } from \"react-bootstrap\";\nimport ErrorBoundary from \"react-error-boundary\";\n\nSendTextModal.propTypes = {\n    message: PropTypes.string,\n    sendText: PropTypes.func\n  };\n\nexport default function SendTextModal(props) {\n  var [show, setShow] = useState(false);\n  var close = props.close;\n  var message = props.message;\n  var sendText = props.sendText;\n\n  if(!show && props.show) {\n    setShow(true);\n  } \n\n  const handleClose = () =>{\n    if (show) setShow(false);\n    close();\n  }\n    \n  return (\n    <ErrorBoundary>\n      <Modal show={show} onHide={handleClose}>\n        <Modal.Header closeButton>\n          <Modal.Title>\n            Confirm the Message Before Sending\n            </Modal.Title>\n            </Modal.Header>\n        <Modal.Body>\n            {message}\n            <Modal.Footer>\n               <Button variant=\"secondary\" onClick={handleClose}>Cancel</Button>\n               <Button variant=\"danger\" onClick={sendAndClose}>Send It!</Button> \n            </Modal.Footer>\n        </Modal.Body>\n      </Modal>\n      </ErrorBoundary>\n  )\n\n  function sendAndClose(){\n   sendText();\n   handleClose();\n  }\n}\n\n","// React\nimport React, { useState } from \"react\";\nimport styled from \"@emotion/styled\";\nimport ErrorBoundary from \"react-error-boundary\";\nimport AlertApp from \"./AlertApp\";\nimport { Button, Card, ListGroup, InputGroup, FormControl, Dropdown } from \"react-bootstrap\";\nimport { useStitchAuth } from \"./StitchAuth\";\nimport { getAppSettings, sendTextToAll } from \"./../stitch/\";\nimport AllUsersTable from \"./AllUsersTable\";\nimport SendTextModal from \"./SendTextModal\";\n\nAdminApp.propTypes = {};\n\nexport default function AdminApp(u) {\n\n  const [user, setUser] = useState((u && u._id) ? u : {});\n  const [confirmText, setConfirmText] = useState(false);\n  var [showSendText, setShowSendText] = useState(false);\n  var [showChangeSettings, setShowChangeSettings] = useState(false);\n  var [showAllUsers, setShowAllUsers] = useState(false);\n\n    const [textBody, setTextBody] = useState();\n    const [appSettings, setAppSettings] = useState();\n    const [selectedAlerts, setSelectedAlerts] = useState([]);\n\n    getAppSettings().then(settings=> {\n        if (settings && !appSettings) {\n            setAppSettings(settings);\n        } else if(appSettings && selectedAlerts.length == 0){\n            var alerts = [];\n            appSettings.alert_types.map((item, index) => (\n                alerts.push({alert:item.type, checked:false})));\n            \n            setSelectedAlerts(alerts);\n        }\n    })\n\n  const {\n    actions: { handleLogout },\n  } = useStitchAuth();\n\n  return (\n    <ErrorBoundary>\n      <Layout>\n        <Card>\n          <Card.Title>\n            <h1>Welcome {user.name != null? user.name : 'WIWS Admininistrator!'}</h1>\n          </Card.Title>\n          <h3>You can do the following things from this page:</h3>\n          <ListGroup>\n              <ListGroup.Item><Button variant=\"info\" onClick={()=>{hideAll();setShowSendText(true)}}>Send a Group Text</Button></ListGroup.Item>\n              <ListGroup.Item><Button variant=\"info\" onClick={()=>{hideAll();setShowChangeSettings(true)}}>Change my personal settings</Button></ListGroup.Item>\n              <ListGroup.Item><Button variant=\"light\" onClick={()=>{hideAll();}}>Add an Admin</Button></ListGroup.Item>\n              <ListGroup.Item><Button className=\"pull-right\" variant=\"secondary\" onClick={handleLogout}>Logout</Button></ListGroup.Item>\n              </ListGroup>\n        </Card>\n        {showSendText && <Card>\n          <Card.Header><b>Send a Text Message </b></Card.Header>\n            <InputGroup>\n                <InputGroup.Prepend>Message:&nbsp;</InputGroup.Prepend>\n                <FormControl as=\"textarea\" name=\"textBody\" onChange={(e)=>setTextBody(e.target.value)}/>\n                {textBody != \"\" && <Button variant=\"info\" onClick={()=>sendTheText()}>Send</Button>}\n            </InputGroup>\n        </Card>}\n         {showChangeSettings && <Card id='changesettings'>\n            <AlertApp/>\n        </Card>}\n        {showAllUsers && <Card id='showUsers'>\n            <AllUsersTable />\n        </Card>}\n      </Layout>\n      <SendTextModal close={()=>setConfirmText(false)} type=\"sendModal\" show={confirmText} message={textBody} \n          sendText={()=>{sendTextToAll(textBody);setConfirmText(false)}} />\n       </ErrorBoundary>\n  );\n\n  function hideAll() {\n    setShowAllUsers(false);\n    setShowChangeSettings(false);\n    setShowSendText(false);\n  }\n  \n  function sendTheText(){\n    setConfirmText(true);\n  }\n}\n\nconst Layout = styled.div`\n  background: #eeeeee;\n  padding: 20px;\n  height: 100%;\n  width: 100%;\n  \n  align-items: center;\n`;\n","import React, { useState }  from \"react\";\nimport { PropTypes } from 'prop-types';\nimport ErrorBoundary from \"react-error-boundary\";\nimport { useStitchAuth} from \"./StitchAuth\";\nimport { isPhoneUnique } from \"./../stitch/\";\nimport { Container, Button,ButtonGroup, InputGroup, FormControl } from \"react-bootstrap\";\nimport { FaFacebookSquare, FaGoogle } from \"react-icons/fa\"\nimport validator from \"validator\";\nimport { parsePhoneNumberFromString } from 'libphonenumber-js'\nimport { GoX } from \"react-icons/go\";\n\nLogin.propTypes = {\n  setPhone: PropTypes.func,\n  setConfirmed: PropTypes.func,\n  setIsUnique: PropTypes.func\n};\n\nexport default function Login(props) {\n  const { actions } = useStitchAuth();\n  console.log(actions)\n  var phoneInput;\n  var { setPhone, setIsUnique, setConfirmed } = props\n  const [isValid, setIsValid] = useState(true);\n\n  return (\n    <ErrorBoundary>\n      <Container>\n      <div className=\"text-center\" color='#425060'>\n      <h2 >Welcome to the WIWS Alert System!</h2>\n      <p>\n      <b>Please enter your phone number and press \"Go!\", </b><br/>\n      <b>or log on with your Google or Facebook account.</b> \n      </p>\n      <InputGroup>\n            <InputGroup.Prepend>Phone number: </InputGroup.Prepend>\n            <FormControl ref={(ref) => {phoneInput = ref}} name=\"phone\" />\n            <Button target=\"phone\" variant='outline-primary' onClick={() => checkNumberAndLogin()}>Go!</Button>\n            {!isValid && <InputGroup>\n            <GoX color=\"red\" size='30' data-for='novalid' data-tip=\"This is not a valid phone number.\" />\n            <p>Please enter a valid phone number</p>\n            </InputGroup>}\n      </InputGroup>\n      <br/><br/>\n      <ButtonGroup size='lg'>\n        <Button variant='outline-primary' onClick={() => actions.handleLogin(\"google\")}>\n          <FaGoogle color='#003399' size='30px'/>Log In with Google</Button>\n        &nbsp;\n        <Button variant='outline-primary' onClick={() => actions.handleLogin(\"facebook\")}>\n          <FaFacebookSquare color='#003399' size='30px'/>Log In with Facebook</Button>\n      </ButtonGroup>\n\n     </div>\n      </Container>\n    </ErrorBoundary>\n  );\n  \n  async function checkNumberAndLogin(){\n    console.log('my # is', phoneInput.value)\n    var formattedPhone = parsePhoneNumberFromString(phoneInput.value, \"US\");\n    if (formattedPhone===undefined) {\n      setIsValid(false);\n      return;\n    }\n    var phone = formattedPhone.format(\"E.164\");\n    if (!validator.isMobilePhone(phone, 'en-US')){\n      setIsValid(false);\n      return;\n    }\n    else {\n      await actions.handleLogin(\"anonymous\").then(async ()=>{\n        await isPhoneUnique(phone).then(unique=>{\n          console.log('unique', unique)\n          setIsUnique(unique);\n          if (!unique) setConfirmed(true);\n          setIsValid(true);\n          setPhone(phone);\n        });\n      });\n    }\n  }\n}\n","import React, {useState} from \"react\";\nimport AlertApp from \"./AlertApp\";\nimport AdminApp from \"./AdminApp\";\nimport Login from \"./Login\";\nimport { StitchAuthProvider, useStitchAuth } from \"./StitchAuth\";\nimport { isAdmin, addPhone, isPhoneUnique } from \"./../stitch/\";\nimport ErrorBoundary from \"react-error-boundary\";\nimport { Card, Alert, InputGroup, FormControl, Container, Button, Nav, Navbar, NavItem } from \"react-bootstrap\";\nimport validator from \"validator\";\nimport ConfirmNumberModal from \"./ConfirmNumberModal\";\nimport { GoAlert, GoCheck, GoX } from \"react-icons/go\";\nimport ReactToolTip from \"react-tooltip\";\nimport { parsePhoneNumberFromString } from 'libphonenumber-js';\n\n\nApp.propTypes = {};\nexport default function App() {\n  return (\n    <StitchAuthProvider>\n      <AppUI />\n    </StitchAuthProvider>\n  );\n}\n\nAppUI.propTypes = {};\n\nfunction AppUI() {\n\nconst [user, setUser] = useState();\nconst [admin, setAdmin] = useState();\nconst [phone, setPhone] = useState();\nconst [showConfirm, setShowConfirm] = useState();\nconst [confirmed, setConfirmed] = useState(false);\nconst [isUnique, setIsUnique] = useState(true);\nconst isValidNumber = (phone && validator.isMobilePhone(phone, 'en-US'));\nconst [originalPhoneNumber, setOPN] = useState();\n  if (phone && originalPhoneNumber===undefined) {\n    setOPN(phone);\n  }\n\nconsole.log('phone?', phone)\nif (user && phone) {\n  user.phone = phone;\n}\n\nif (admin === undefined){\n  isAdmin().then(result=>{\n    setAdmin(result.isAdmin);\n    setUser(result.user);\n  });\n}\n\n const {\n    isLoggedIn,\n    actions: { handleLogout },\n  } = useStitchAuth();\n  \nfunction NextScreen(){\n  console.log(phone, isUnique, confirmed)\n    if (phone === originalPhoneNumber){\n      setIsUnique(false);\n      setConfirmed(true);\n    }\n    else {\n      setConfirmed(false);\n      setIsUnique(true);\n    }\n    {\n      if (phone) {\n            return <ErrorBoundary>\n              <Card>\n            {(isUnique && !confirmed) && <Alert variant='warning'>\n            Welcome! We need to verify your phone number before we can send you text messages. Please check the phone number and \n              click the \"Verify\" button.\n            </Alert>}\n          <InputGroup>\n            <FormControl name=\"userphone\" value={phone} onChange={(e)=>{phoneChanged(e)}}/>\n              <InputGroup.Append>\n                  {!isValidNumber && <GoX color=\"red\" size='30' data-for='novalid' data-tip=\"This is not a valid phone number.\" />}\n                  { (isValidNumber && confirmed) ? \n                  <GoCheck color=\"green\" size='30' data-for='good' data-tip=\"This is a confirmed phone number.\" /> : \n                  <GoAlert color=\"gold\" size='30' data-for='unconfirmed' data-tip=\"This number has not yet been confirmed.\" />}   \n                </InputGroup.Append>\n              </InputGroup>\n              <Button onClick={()=>CheckNumber()} disabled={confirmed}>Verify</Button>\n              {!isValidNumber && <label style={{color:'red'}}>Please enter a valid phone number</label>}\n            </Card>\n            <ConfirmNumberModal close={()=>setShowConfirm(false)} show={showConfirm} phone={phone} confirmPhoneChanges={(e)=>confirmPhoneChanges(e)}></ConfirmNumberModal>\n            <ReactToolTip id='novalid'/>\n          <ReactToolTip id='good'/>\n          <ReactToolTip id='unconfirmed'/>\n          {(isUnique && confirmed) && \n          <ErrorBoundary>\n              <Alert variant='success'>Thank you. Your number has been confirmed and you will start receiving text messages from WIWS.</Alert>\n              <Button variant=\"secondary\" onClick={LogMeOut}>Logout</Button>\n          </ErrorBoundary>\n          }\n          {!isUnique && \n          <ErrorBoundary>\n              <Alert variant='success'>This phone number is already confirmed in the system and should be receiving texts from WIWS.</Alert>\n              <Button variant=\"secondary\" onClick={LogMeOut}>OK</Button>\n          </ErrorBoundary>\n          }\n        </ErrorBoundary>   \n      }\n      else if (isLoggedIn && admin) {return <AdminApp {...user} />}\n      else {return <Login setPhone={(p)=>setPhone(p)} setIsUnique={(p)=>setIsUnique(p)} setConfirmed={(c)=>{setConfirmed(c)}} user={user} />}\n    }\n  }\n\n  return (\n    <Container>\n      <Navbar bg=\"info\" variant=\"light\">\n        <Nav>\n          <Navbar.Brand href=\"wiws.org\">\n            <img\n              alt=\"WIWS Logo\"\n              src=\"/logo.jpg\"\n              className=\"d-inline-block align-top\" />\n          </Navbar.Brand>\n        </Nav>\n          <Nav className=\"ml-auto\">\n            <Navbar.Text><h1>WIWS Text Alert System</h1></Navbar.Text>\n          </Nav>\n          <Nav className=\"ml-auto\">\n            <NavItem>{isLoggedIn && <Button className='pull-right' variant=\"secondary\" onClick={LogMeOut}>Logout</Button>}</NavItem>\n          </Nav>\n      </Navbar>\n      <NextScreen/>\n    </Container>\n  );\n\n  function LogMeOut() {\n    setPhone(null);\n    setAdmin(false);\n    setIsUnique(true);\n    setConfirmed(false);\n  }\n\n  function phoneChanged(e){\n    setPhone(e.target.value);\n    console.log('phonechanged', phone, originalPhoneNumber)\n    \n\n  }\n  function CheckNumber(){\n    console.log('CheckNumber',phone)\n    var formattedPhone = parsePhoneNumberFromString(phone, \"US\");\n    console.log(formattedPhone)\n    if (formattedPhone===undefined || !validator.isMobilePhone(formattedPhone.number, 'en-US')) return;\n    \n    else {\n      if (!isPhoneUnique(phone)) {\n        setIsUnique(false);\n        return;\n      } else {\n        setIsUnique(true);\n          if (originalPhoneNumber !== phone){\n            setShowConfirm(true);\n          }\n        ReactToolTip.rebuild();\n      }\n    }\n  }\n \n  function confirmPhoneChanges(success){\n    console.log('succ', success)\n    if (success) { \n      console.log('success confirming phone', phone)\n       setConfirmed(true);\n       addPhone(phone.toString())\n    }\n      else {\n        setConfirmed(user.confirmed)\n    }\n  }\n\n}\n\n","import React from \"react\";\nimport ReactDOM from \"react-dom\";\nimport App from \"./components/App\";\nimport \"bootstrap/dist/css/bootstrap.min.css\";\n\nconst rootElement = document.getElementById(\"root\");\nReactDOM.render(<App />, rootElement);\n"],"sourceRoot":""}